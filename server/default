server {
    listen 80 default_server;
    error_page 404 /404.html;
    error_log /var/log/nginx/debug_error.log debug;

    location /fetch {
        auth_request /auth;
        auth_request_set $cid $upstream_http_x_authorized_cid;
        set $cid "bafybeib3hq2mgvnshumhhi6lopm6v4wqs2sl5azvqtroqhv5wr2nd7cxcy";

        if ($request_uri ~ \.\./) {
            return 403;
        }

        if ($request_uri !~ \.[^/]+$) {
            return 404; 
        }

        rewrite ^/fetch(/.*)?$ /ipfs/$cid$1 last;
        return 403;
    }

    location ~ ^/ipfs/(.+)$  {
        internal;
        etag off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass http://127.0.0.1:8080;
        proxy_redirect http://127.0.0.1/ $scheme://$host/;

        proxy_hide_header Server;
        proxy_hide_header X-Powered-By;
        proxy_hide_header Cache-Control;
        proxy_hide_header X-Ipfs-Path;
        proxy_hide_header X-Ipfs-roots;
        proxy_hide_header ETag;

        add_header Cache-Control "no-store, no-cache, must-revalidate";
        add_header X-Content-Type-Options "nosniff";
        add_header X-Frame-Options "DENY";
        proxy_intercept_errors on;
    }

    location = /auth {
        internal;
        proxy_pass http://127.0.0.1:3000/auth;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
    }

}
